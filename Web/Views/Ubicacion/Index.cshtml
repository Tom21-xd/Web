@using Microsoft.AspNetCore.Identity;

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var cont = 1;

}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Gestionar Ubicaciones</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet"
          integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">

    <style>
        input {
            width: 100px;
        }

        .lista {
            padding: 0;
        }

        .gestion {
            margin: 0;
            padding: 0;
        }
    </style>
</head>

<body style="background-color: rgb(207, 207, 207);">
    <div class="container" style="margin-top: 25px;padding: 5px ;margin-left:300px; width:80%">
        <h1 class="ml-3 mb-5" style="color:#255000;">Gestionar Ubicaciones</h1>

        <div>
            <label for="pisos">Pisos</label>
            <input id="numPisos" type="number" min="1" value="@ViewBag.pisos.Count">

            <label for="bloques">Bloques</label>
            <input id="numBloques" type="number" min="1" value="@ViewBag.bloques.Count">
            <button id="botonGuardar" class="btn btn-primary" disabled>Guardar Cambios</button>
        </div>

        <div class="table-responsive mt-3">
            <div style="width:1000px;">
                <table id="tabla" class="table-bordered align-middle border-success mt-3">
                    <thead>
                        <th style=" width:150px;" class="text-center">Bloque</th>
                        @foreach (PisoModel piso in ViewBag.pisos)
                        {
                            <th style=" width:150px; text-align: center" class="text-center">Piso @cont</th>
                            cont++;
                        }
                        @{
                            cont = 1;
                        }
                    </thead>

                    <tbody>

                        @foreach (BloqueModel bloque in ViewBag.bloques)
                        {
                            <tr>
                                <td class="text-center">@cont</td>
                                @foreach (PisoModel piso in ViewBag.pisos)
                                {
                                    <td class="text-center">
                                        <input class="text-center" type="checkbox">
                                    </td>
                                }
                            </tr>
                            cont++;
                        }
                        @{
                            cont = 1;
                        }
                    </tbody>
                </table>
            </div>



        </div>
    </div>

    <script src="https://code.jquery.com/jquery-3.4.1.js" integrity="sha256-WpOohJOqMqqyKL9FccASB9O0KwACQJpFTUBLTYOVvVU="
            crossorigin="anonymous">
    </script>
    <script src="https://cdn.datatables.net/1.10.20/js/jquery.dataTables.min.js">
    </script>
    <script src="https://cdn.datatables.net/1.10.20/js/dataTables.bootstrap4.min.js">
    </script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.min.js" integrity="sha384-BBtl+eGJRgqQAUMxJ7pMwbEyER4l1g+O15P+16Ep7Q9Q+zqX6gSbd85u4mG4QzX+" crossorigin="anonymous"></script>

    <script>
        var nump = document.getElementById("numPisos");
        var numb = document.getElementById("numBloques");
        var btn = document.getElementById("botonGuardar");
        var tabla = document.getElementById("tabla");
        var opf = @((int)ViewBag.bloques.Count);
        var opc = @((int)ViewBag.pisos.Count);

        function habilitarBoton(){
            if (parseInt(nump.value) == opc && parseInt(numb.value) == opf) {
                btn.disabled = true;
            } else {
                btn.disabled = false;
            }
        }

        function actualizarTabla(){
            btn.disable = true;
            var f = opf - parseInt(numb.value);
            var c = opc - parseInt(nump.value);
            var fActuales = tabla.rows.length - 1;
            var cActuales = tabla.rows[0].cells.length - 1;

            if (c > 0){
                var nombres = [];
                for (var i = 0; i < c; i++) {
                    for (var j = 0; j <= opf; j++) {
                        tabla.rows[j].cells[opc].style.display = 'none';
                    }
                    nombres.push(opc.toString());
                    opc--;
                }
                eliminarPisosAjax(nombres);
            } else if (c < 0) {
                var nombres = [];
                c *= -1;

                for (var i = 1; i <= cActuales && c > 0; i++){
                    var aux = tabla.rows[0].cells[i];
                    if (aux.style.display == 'none'){
                        aux.style.display = 'table-cell';
                        for (var j = 1; j <= fActuales; j++){
                            tabla.rows[j].cells[i].style.display = 'table-cell';
                            tabla.rows[j].cells[i].style.textAlign = 'center';
                        }
                        opc++;
                        nombres.push(opc);
                        c--;
                        b = true;
                    }

                }
                
                var estiloTh = {
                    width: '150px'
                };
                for (var i = 0; i < c; i++) {
                    opc++;
                    var nuevoTh = document.createElement('th');
                    nuevoTh.textContent = "Piso " + (opc);
                    nuevoTh.classList.add('text-center');

                    Object.assign(nuevoTh.style, estiloTh);

                    tabla.rows[0].insertCell(opc).appendChild(nuevoTh);
                    for (var j = 1; j <= parseInt(numb.value); j++) {
                        tabla.rows[j].insertCell(-1);
                        var checkbox = document.createElement("input");
                        checkbox.type = "checkbox";
                        tabla.rows[j].cells[opc].appendChild(checkbox);
                    }
                    nombres.push(opc.toString());
                }
                crearPisosAjax(nombres);
            }

            if (f > 0) {
                var nombres = [];
                for (var i = 0; i < f; i++) {
                    tabla.deleteRow(opf);
                    nombres.push(opf.toString());
                    opf--;
                }
                eliminarBloquesAjax(nombres);
            } else if (f < 0) {
                f *= -1;
                var nombres = [];
                for (var i = 0; i < f; i++) {
                    opf++;
                    tabla.insertRow();

                    tabla.rows[opf].insertCell(0);
                    tabla.rows[opf].cells[0].innerHTML = opf;
                    tabla.rows[opf].cells[0].style.textAlign = 'center';
                    for (var j = 1; j <= opc; j++) {
                        tabla.rows[opf].insertCell(-1);
                        var checkbox = document.createElement("input");
                        checkbox.type = "checkbox";
                        tabla.rows[opf].cells[j].appendChild(checkbox);
                        tabla.rows[opf].cells[j].style.textAlign = 'center';
                    }
                    nombres.push(opf.toString());
                }
                crearBloquesAjax(nombres);
            }
            
        }

        function eliminarPisosAjax(nombres) {
            $.ajax({
                url: "@Url.Action("EliminarPisos", "Ubicacion")",
                type: "POST",
                traditional: true,
                data: { nombres: nombres },
                success: function (result) {

                },
                error: function (xhr, status, error) {
                    console.error(error);
                }
            });
        }

        function crearPisosAjax(nombres) {
            $.ajax({
                url: "@Url.Action("CrearPisos", "Ubicacion")",
                type: "POST",
                traditional: true,
                data: { nombres: nombres },
                success: function (result) {
                    
                },
                error: function (xhr, status, error) {
                    console.error(error);
                }
            });
        }

        function eliminarBloquesAjax(nombres) {
            $.ajax({
                url: "@Url.Action("EliminarBloques", "Ubicacion")",
                type: "POST",
                traditional: true,
                data: { nombres: nombres },
                success: function (result) {
                    
                },
                error: function (xhr, status, error) {
                    console.error(error);
                }
            });
        }

        function crearBloquesAjax(nombres) {
            $.ajax({
                url: "@Url.Action("CrearBloques", "Ubicacion")",
                type: "POST",
                traditional: true,
                data: { nombres: nombres },
                success: function (result) {
                    
                },
                error: function (xhr, status, error) {
                    console.error(error);
                }
            });
        }

        btn.addEventListener('click', actualizarTabla);
        nump.addEventListener('input', habilitarBoton);
        numb.addEventListener('input', habilitarBoton);
        
    </script>

</body>
</html>

